#ifndef PETERLITS_IDMAP_H__
#define PETERLITS_IDMAP_H__

#include <cstdint>
#include <map>
#include <string>

#include "../val.h"

enum Val_T {
    PER,    // person
    PEE,    // better person
    STR,    // string
    NUL,    // null
};

// why we do not use mbc::Val?

// class Val {
// public:
//     Val(PersonPtr* ptr);
//     Val(mbc::Val::PersonHandle* ph_ptr);
//     Val(std::string* ptr);
//     Val();
// 
//     std::string str();
// 
//     PersonPtr* getPersonPtr();
//     std::string* getString();
//     mbc::Val::PersonHandle* getPersonHandle();
//     void del();
// private:
//     Val_T type_;
//     union V {
//         PersonPtr*   p;
//         std::string* s;
//         mbc::Val::PersonHandle* e;
//     } val_;
// };
// 
// class Idmap {
// public:
//     Idmap();
//      ~Idmap();
// 
//     void update(std::string name, Val* value);
//     Val* get(std::string name);
// 
// private:
//     std::map<std::string, Val*> idmap_;
// };

#endif // for PETERLITS_IDMAP_H__
